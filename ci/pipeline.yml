---
resource_types:
- name: semver
  type: docker-image
  source:
    repository: concourse/semver-resource
    tag: 1.6

resources:
- name: os-conf-release
  type: git
  source:
    uri: git@github.com:cloudfoundry/os-conf-release.git
    branch: master
    private_key: ((github_deploy_key_os-conf-release.private_key))

- name: golang-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

- name: ubuntu-jammy-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-jammy-go_agent

- name: os-conf-version
  type: semver
  source:
    driver: s3
    bucket: os-conf-version
    key: current-version
    initial_version: 20.0.0
    access_key_id: ((os-conf-upload_assume_aws_access_key.username))
    secret_access_key: ((os-conf-upload_assume_aws_access_key.password))
    assume_role_arn: ((os-conf-upload_assume_aws_access_key.role_arn))

- name: weekly
  type: time
  source:
    start: 3:00 -0700
    stop: 4:30 -0700
    days: [ Saturday ]

- name: bosh-ecosystem-docker-image
  type: docker-image
  source:
    repository: bosh/bosh-ecosystem-concourse
    username: ((docker.username))
    password: ((docker.password))

- name: release-notes
  type: s3
  source:
    bucket: os-conf-version
    access_key_id: ((os-conf-upload_assume_aws_access_key.username))
    secret_access_key: ((os-conf-upload_assume_aws_access_key.password))
    aws_role_arn: ((os-conf-upload_assume_aws_access_key.role_arn))
    versioned_file: release-notes.md
    initial_version: "0"
    initial_content_text: ""

- name: github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: os-conf-release
    access_token: ((github_public_repo_token))

jobs:
- name: os-conf-release-acceptance-tests-jammy
  serial: true
  plan:
  - in_parallel:
    - get: os-conf-release
      trigger: true
    - get: ubuntu-jammy-stemcell
      trigger: true
    - get: bosh-ecosystem-docker-image
  - task: run-ubuntu-jammy-os-conf-acceptance-tests
    file: os-conf-release/ci/tasks/run-acceptance-tests.yml
    image: bosh-ecosystem-docker-image
    params:
      BOSH_CA_CERT: ((iaas_directors_gcp-director_bosh_ca_cert.ca))
      BOSH_CLIENT: ((iaas_directors_gcp-director_bosh_client.username))
      BOSH_CLIENT_SECRET: ((iaas_directors_gcp-director_bosh_client.password))
      BOSH_DEPLOYMENT: os-conf-jammy
      BOSH_ENVIRONMENT: ((iaas_directors_gcp-director_bosh_environment))
      BOSH_JUMPBOX_IP: ((iaas_directors_gcp-director_bosh_jumpbox_ip))
      BOSH_JUMPBOX_PRIVATE_KEY: ((iaas_directors_gcp-director_bosh_jumpbox_ssh.private_key))
      BOSH_JUMPBOX_USER: ((iaas_directors_gcp-director_bosh_jumpbox_username))
      BOSH_STEMCELL_OS: ubuntu-jammy
      BOSH_STEMCELL_NAME: bosh-google-kvm-ubuntu-jammy-go_agent
    input_mapping:
      stemcell: ubuntu-jammy-stemcell

- name: bump-deps
  plan:
  - in_parallel:
    - get: os-conf-release
    - get: golang-release
    - get: weekly
      trigger: true
  - task: bump-deps
    file: golang-release/ci/tasks/shared/bump-deps.yml
    input_mapping:
      input_repo: os-conf-release
    output_mapping:
      output_repo: bumped-os-conf-release
    params:
      SOURCE_PATH: src/os-conf-acceptance-tests
  - put: os-conf-release
    params:
      repository: bumped-os-conf-release
      rebase: true

- name: automatically-release-new-patch
  serial: true
  plan:
    - in_parallel:
        - get: os-conf-release
          trigger: true
          passed:
            - os-conf-release-acceptance-tests-jammy
        - get: golang-release
        - get: os-conf-version
    - try:
        task: check-for-patched-cves
        file: golang-release/ci/tasks/shared/check-for-patched-cves.yml
        input_mapping:
          input_repo: os-conf-release
          version: os-conf-version
        params:
          SEVERITY: CRITICAL,HIGH
          SOURCE_PATH: src
        on_success:
          do:
            - put: release-notes
              params:
                file: patched_cves/release-notes.md
            - put: os-conf-version
              params:
                bump: patch
    - task: ensure-cve-checker-succeeded
      file: golang-release/ci/tasks/shared/ensure-cve-checker-succeeded.yml
      params:
        description: |
          Since the previous step is wrapped in a "try", this task checks that the previous step fully executed.


- name: create-final-release
  disable_manual_trigger: true
  plan:
    - in_parallel:
        - get: os-conf-release
          passed:
            - os-conf-release-acceptance-tests-jammy
        - get: os-conf-version
          trigger: true
        - get: release-notes
        - get: bosh-ecosystem-docker-image
    - task: create-final-release
      file: os-conf-release/ci/tasks/create-final-release.yml
      image: bosh-ecosystem-docker-image
      params:
        PRIVATE_YML:
          blobstore:
            provider: s3
            options:
              access_key_id: ((os-conf-upload_assume_aws_access_key.username))
              secret_access_key: ((os-conf-upload_assume_aws_access_key.password))
              assume_role_arn: ((os-conf-upload_assume_aws_access_key.role_arn))
    - put: os-conf-release
    - put: github-release
      params:
        name: released-version/prefixed-semver-version
        tag: released-version/prefixed-semver-version
        body: release-notes/release-notes.md

- name: clear-release-notes
  plan:
    - get: os-conf-version
      passed:
        - create-final-release
      trigger: true
    - get: golang-release
    - task: clear-release-notes
      file: golang-release/ci/tasks/shared/clear-release-notes.yml
    - put: release-notes
      params:
        file: release-notes/release-notes.md

- name: create-final-release-major
  serial: true
  plan:
    - put: os-conf-version
      params:
        bump: major

- name: create-final-release-minor
  serial: true
  plan:
    - put: os-conf-version
      params:
        bump: minor

- name: create-final-release-patch
  serial: true
  plan:
    - put: os-conf-version
      params:
        bump: patch

#!/bin/bash

set -xeuo pipefail

JOB_CONF_PATH="/var/vcap/jobs/*/config/os-conf/sysctl.conf"

trim_spaces() {
    sed 's/^[[:space:]]\+//; s/[[:space:]]\+$//'
}

remove_comments() {
    sed '/^[[:space:]]*\(;\|#\)/d'
}

remove_empty_lines() {
    sed '/^[[:space:]]*$/d'
}

declare -A param_values param_files

conflict=false
# Parse config files and exit with an error if conflicted values are found
for conf_file in $(compgen -G "$JOB_CONF_PATH"); do
    conf=$(cat "$conf_file" | remove_comments | remove_empty_lines)

    while IFS== read -r param value; do
        [[ -z $param ]] && continue
        [[ -z $value ]] && continue

        param=$(trim_spaces <<< $param)
        value=$(trim_spaces <<< $value)

        if [[ -n ${param_files[$param]-} && ${param_values[$param]-} != $value ]]; then
            echo "ERROR: There is a conflict in parameter values" >&2
            (
                echo -e "${param_files[$param]}:\t$param = ${param_values[$param]}" >&2
                echo -e "$conf_file:\t$param = $value" >&2
            ) | column -ts$'\t'
            conflict=true
        else
            param_files[$param]=$conf_file
            param_values[$param]=$value
        fi
    done <<< "$conf"
done
$conflict && exit 1

# Generate the list of job level settings (param = value)
job_confs=$(
    for param in "${!param_values[@]}"; do
        echo "$param = ${param_values[$param]}"
    done
)

# Store the custom sysctl in sysctl.d so that they automatically go into effect at boot
cat > /etc/sysctl.d/<%= p("sysctl_conf_prefix") %>-bosh-os-conf-sysctl.conf << EOF
# Autogenerated by bosh os-conf-release sysctl. Do not edit.

# Job level settings
$job_confs

# Instance group level overrides
<%= p("sysctl").join "\n" %>
EOF

# Reapply all sysctls now (including the ones we just stored above)
sysctl --system
